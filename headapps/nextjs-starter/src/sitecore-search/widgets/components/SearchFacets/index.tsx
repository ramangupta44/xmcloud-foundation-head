// This component was generated by @sitecore-search/cli on Mon Dec 23 2024 16:23:58 GMT+0000 (Coordinated Universal Time)

import { CheckIcon } from '@radix-ui/react-icons';
import { useSearchResultsActions } from '@sitecore-search/react';
import type { SearchResponseFacet } from '@sitecore-search/react';
import {
  AccordionFacets,
  FacetItem,
  RangeFacet,
  SearchResultsAccordionFacets,
  SearchResultsFacetValueRange,
} from '@sitecore-search/ui';

import styles from './styles.module.css';

type SearchFacetsProps = {
  facets: SearchResponseFacet[];
};
type PriceFacetProps = {
  min: number;
  max: number;
};
const PriceFacet = ({ min, max }: PriceFacetProps) => {
  return (
    <SearchResultsFacetValueRange
      max={max}
      min={min}
      autoAdjustValues={false}
      className={styles['sitecore-range-facet-root']}
    >
      <RangeFacet.Track className={styles['sitecore-range-facet-track']}>
        <RangeFacet.Range className={styles['sitecore-range-facet-range']} />
      </RangeFacet.Track>
      <RangeFacet.Start className={styles['sitecore-range-facet-start']}>
        {(value) => <span>${value}</span>}
      </RangeFacet.Start>
      <RangeFacet.End className={styles['sitecore-range-facet-end']}>
        {(value) => <span>${value}</span>}
      </RangeFacet.End>
    </SearchResultsFacetValueRange>
  );
};
const Facets = ({ facets }: SearchFacetsProps) => {
  const { onFacetClick } = useSearchResultsActions();
  return (
    <SearchResultsAccordionFacets
      defaultFacetTypesExpandedList={[]}
      onFacetTypesExpandedListChange={() => {
        // No operation needed for now
      }}
      onFacetValueClick={onFacetClick}
      className={styles['sitecore-accordion-facets-root']}
    >
      {facets.map((facet) => (
        <AccordionFacets.Facet
          facetId={facet.name}
          key={facet.name}
          className={styles['sitecore-accordion-facets-facet']}
        >
          <AccordionFacets.Header className={styles['sitecore-accordion-header']}>
            <AccordionFacets.Trigger className={styles['sitecore-accordion-trigger']}>
              {facet.label}
            </AccordionFacets.Trigger>
          </AccordionFacets.Header>
          <AccordionFacets.Content>
            <AccordionFacets.ValueList className={styles['sitecore-accordion-value-list']}>
              {facet.name !== 'price' ? (
                facet.value.map((facetValue, index) => (
                  <FacetItem
                    {...{
                      index,
                      facetValueId: facetValue.id,
                    }}
                    key={facetValue.id}
                    className={styles['sitecore-accordion-item']}
                  >
                    <AccordionFacets.ItemCheckbox
                      className={styles['sitecore-accordion-item-checkbox']}
                    >
                      <AccordionFacets.ItemCheckboxIndicator
                        className={styles['sitecore-accordion-item-checkbox-indicator']}
                      >
                        <CheckIcon />
                      </AccordionFacets.ItemCheckboxIndicator>
                    </AccordionFacets.ItemCheckbox>
                    <AccordionFacets.ItemLabel
                      className={styles['sitecore-accordion-item-checkbox-label']}
                    >
                      {facetValue.text} {facetValue.count && `(${facetValue.count})`}
                    </AccordionFacets.ItemLabel>
                  </FacetItem>
                ))
              ) : (
                <PriceFacet
                  min={Math.floor(facet.value[0].min)}
                  max={Math.floor(facet.value[facet.value.length - 1].max)}
                />
              )}
            </AccordionFacets.ValueList>
          </AccordionFacets.Content>
        </AccordionFacets.Facet>
      ))}
    </SearchResultsAccordionFacets>
  );
};
export default Facets;
